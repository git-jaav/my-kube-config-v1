############## crear objetos simple (1 capa)  raiz = _own_est #############
## config  - set as false  in CM  :   ANOTHER_SERVICE: "false"
kubectl apply -f deployment-svc-full/cm-my-app-api-2.0.yaml

## deploy
kubectl apply -f deployment-svc-full/deployment-my-api-layer1-1.0.yaml

## service (nodeport para asociar a in ingress))
kubectl apply -f deployment-svc-full/svc-my-api-layer1-1.0.yaml

## service (Load balancer Para pruebas sin ingress - OPCIONAL)
kubectl apply -f deployment-svc-full/svc-my-api-layer1-lb-1.0.yaml

# create an nginx ingress controller  (SI NO EXISTIERA):
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.2.1/deploy/static/provider/cloud/deploy.yaml

## ingress (Ref a un service)
kubectl apply -f deployment-svc-full/ingress-my-api-layer1-1.0.yaml


############## crear objetos full (2 capas)  raiz = _own_est #############
## config
kubectl apply -f deployment-svc-full/cm-my-app-api-2.0.yaml

## deploy
kubectl apply -f deployment-svc-full/deployment-my-api-layer1-1.0.yaml
kubectl apply -f deployment-svc-full/deployment-my-api-layer2-1.0.yaml

## service
kubectl apply -f deployment-svc-full/svc-my-api-layer1-1.0.yaml
kubectl apply -f deployment-svc-full/svc-my-api-layer2-1.0.yaml

## ingress
kubectl apply -f deployment-svc-full/ingress-my-api-layer1-1.0.yaml